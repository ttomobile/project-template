// Code generated by goa v3.22.6, DO NOT EDIT.
//
// oidc HTTP client CLI support package
//
// Command:
// $ goa gen github.com/example/project-template/apps/goa-app/design

package client

import (
	"encoding/json"
	"fmt"

	oidc "github.com/example/project-template/apps/goa-app/gen/oidc"
)

// BuildCompletePayload builds the payload for the oidc complete endpoint from
// CLI flags.
func BuildCompletePayload(oidcCompleteBody string) (*oidc.CompletePayload, error) {
	var err error
	var body CompleteRequestBody
	{
		err = json.Unmarshal([]byte(oidcCompleteBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"code\": \"Dolores ut est ab magni officiis nobis.\",\n      \"state\": \"Sed aut eveniet.\"\n   }'")
		}
	}
	v := &oidc.CompletePayload{
		State: body.State,
		Code:  body.Code,
	}

	return v, nil
}

// BuildSessionPayload builds the payload for the oidc session endpoint from
// CLI flags.
func BuildSessionPayload(oidcSessionState string) (*oidc.SessionPayload, error) {
	var state string
	{
		state = oidcSessionState
	}
	v := &oidc.SessionPayload{}
	v.State = state

	return v, nil
}
